<div class="title-main">
    <h2>{{title}}</h2>
    <h3>{{dateRange}}</h3>
</div>

<div class="search-main">
    <div class="brokers">
        Brokers:
        <select name="brokers" id="brokers">
            <option></option>
            {{#each brokers}}
            <option value="{{id}}">{{slug}}</option>
            {{/each}}
        </select>
    </div>
    <div class="daterange">
        <input type="text" name="daterange" id="daterange" value="{{dateRange}}">
    </div>
    <div class="search">
        <button name="btn-search">
            <svg with="10px" height="10px" xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                <path
                    d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6 .1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z" />
            </svg>
            Search
        </button>
    </div>

</div>

{{#if show}}
<div class="chart-main">
    <div class="listings-chart">
        <canvas id="listingsChart" class="chart"></canvas>
    </div>

</div>

<div class="table-main">
    <div class="chart-table">
        <p class="table-title">Average per website</p>
        <table class="table-average" id="averageTable">
            <thead>
                <tr>
                    <th onclick="sortTable(0, 'averageTable')">
                        Broker
                    </th>
                    <th onclick="sortTable(1, 'averageTable')">
                        website
                    </th>
                    <th onclick="sortTable(2, 'averageTable')">
                        Total Revenue
                    </th>
                    <th onclick="sortTable(3, 'averageTable')">
                        Average Revenue
                    </th>
                </tr>
            </thead>
            <tbody>
                {{#each tableAverage}}
                <tr>
                    <td>{{sites_slug}}</td>
                    <td alt="{{url}}">{{parse_url}}</td>
                    <td alt="{{sum}}">{{parse_sum}}</td>
                    <td alt="{{average}}">{{parse_average}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
    <div class="div-table-listings">
        <p class="table-title">Listings Report</p>
        <table class="table-listings" id="listingsTable">
            <thead>
                <tr>
                    <th onclick="sortTable(0, 'listingsTable')">Broker</th>
                    <th onclick="sortTable(1, 'listingsTable')">website</th>
                    <th onclick="sortTable(2, 'listingsTable')">Month</th>
                    <th onclick="sortTable(3, 'listingsTable')">Date</th>
                    <th onclick="sortTable(4, 'listingsTable')">Revenue</th>
                </tr>
            </thead>
            <tbody>
                {{#each table.rows}}
                <tr>
                    <td>{{broker}}</td>
                    <td alt="{{url}}">{{listing_id}}</td>
                    <td>{{listing_month}}</td>
                    <td>{{listing_date}}</td>
                    <td alt="{{revenue}}">{{parse_revenue}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('listingsChart');

    const labels = [{{{ lineChart.labels }}}];
    const datasets = {{{ lineChart.datasets }}}

    new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: datasets
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Listing per month'
                }
            }
        }
    })

    function sortTable(n, obj) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;

        table = document.getElementById(obj);
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>
{{else}}
<div class="not-found-card">
    <div class="error-message">
        No result found for this request
    </div>
</div>
{{/if}}
<script>
    $(function () {
        $('input[name="daterange"]').daterangepicker({
            opens: 'left'
        });
    })

    $(function () {
        $('button[name="btn-search"]').click(function () {
            document.location.href = '/?broker=' + $('#brokers').val() + '&daterange=' + $('#daterange').val()
        });
    })
</script>